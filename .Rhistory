return(apubD)
})
oriL = outL
qite
qitems
qitem = qitems[1]
mindatev
maxdatev
res <- EUtilsSummary(qitem, mindate = mindatev, maxdate = maxdatev, retmax = 99999)
fetch <- EUtilsGet(res)
pubD = cbind(PMID(fetch), Title(fetch), YearPubmed(fetch), ArticleTitle(fetch), Cited(fetch),
unlist(lapply(Author(fetch), function(z) { return(paste(as.character(z[nrow(z),1:2]), collapse = ",")) })),
unlist(lapply(PublicationType(fetch), function(z) { return(as.character(z[1])) })),
unlist(lapply(Affiliation(fetch), function(z) { return(paste(unique(z), collapse = "|")) })) )
colnames(pubD) = c("pid", "journal", "year", "title", "citation", "lastAu", "journalTy", "institute")
apubD = as.data.frame(pubD) %>% dplyr::filter(journalTy == "Journal Article" | journalTy == "Letter") %>%
dplyr::filter(!grepl("Calcium and SOL Protease Mediate Temperature Resetting of Circadian Clocks", title)) %>%
dplyr::filter(!grepl("Retraction|Correction", title))
rm(list=ls())
library(RISmed)
library(tidyverse)
##scholar: Analyse Citation Data from Google Scholar
##rvest: Easily Harvest (Scrape) Web Pages
##Get summary of NCBI EUtils query
#qitem = "circadian[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])"
#qitem = "circadian[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])"
# res <- EUtilsSummary(qitem, mindate = "2009/01/01", maxdate = "2019/06/01", retmax = 99999)
# ##get Medline object of EUtils query
# fetch <- EUtilsGet(res)
##get the titile of fetch
# #Cited(fetch)     ##not precise
# #Country(fetch)  ##not precise
# #AbstractText(fetch) ##for text mining, not to use
#
# ArticleTitle(fetch)
# PMID(fetch)
# Title(fetch)    ##the journal
# YearPubmed(fetch)
# Author(fetch)   ##data frame
# PublicationType(fetch)
# Affiliation(fetch)
qitems = c("circadian[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"circadian[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"sleep[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"sleep[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"melanoma[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"melanoma[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"(cancer[Title] OR tumor[Title]) AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"(cancer[Title/Abstract] OR tumor[Title/Abstract]) AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"circadian[Title]", "circadian[Title/Abstract]", "sleep[Title]", "melanoma[Title]",
"cancer[Title] OR tumor[Title])", "autism[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])")
qnames = c("circadian[Title]&CNS","circadian[Title_Abstract]&CNS",
"sleep[Title]&CNS", "sleep[Title_Abstract]&CNS",
"melanoma[Title]&CNS", "melanoma[Title_Abstract]&CNS",
"cancer|tumor[Title]&CNS", "cancer|tumor[Title_Abstract]&CNS",
"circadian[Title]", "circadian[Title_Abstract]", "sleep[Title]",
"melanoma[Title]", "cancer|tumor[Title]", "autism[Title_Abstract]&CNS")
cindex = 10
qitems = qitems[cindex]
qnames = qnames[cindex]
mindatev = "2009/01/01"
maxdatev = "2010/01/31"
##just cell, nature and science
#qitems = c("Nature[Journal]", "Science[Journal]", "Cell[Journal]")
outL = qitems  %>% purrr::map(function(z) {
qitem = z
res <- EUtilsSummary(qitem, mindate = mindatev, maxdate = maxdatev, retmax = 99999)
##get Medline object of EUtils query
fetch <- EUtilsGet(res)
pubD = cbind(PMID(fetch), Title(fetch), YearPubmed(fetch), ArticleTitle(fetch), Cited(fetch),
unlist(lapply(Author(fetch), function(z) { return(paste(as.character(z[nrow(z),1:2]), collapse = ",")) })),
unlist(lapply(PublicationType(fetch), function(z) { return(as.character(z[1])) })),
unlist(lapply(Affiliation(fetch), function(z) { return(paste(unique(z), collapse = "|")) })) )
colnames(pubD) = c("pid", "journal", "year", "title", "citation", "lastAu", "journalTy", "institute")
apubD = as.data.frame(pubD) %>% dplyr::filter(journalTy == "Journal Article" | journalTy == "Letter") %>%
dplyr::filter(!grepl("Calcium and SOL Protease Mediate Temperature Resetting of Circadian Clocks", title)) %>%
dplyr::filter(!grepl("Retraction|Correction", title))
#authorD = do.call(rbind, Author(fetch)) %>% dplyr::mutate(uniName = paste(LastName, ForeName, sep = ",") )
return(apubD)
})
oriL = outL
rm(list=ls())
library(RISmed)
library(tidyverse)
##scholar: Analyse Citation Data from Google Scholar
##rvest: Easily Harvest (Scrape) Web Pages
##Get summary of NCBI EUtils query
#qitem = "circadian[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])"
#qitem = "circadian[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])"
# res <- EUtilsSummary(qitem, mindate = "2009/01/01", maxdate = "2019/06/01", retmax = 99999)
# ##get Medline object of EUtils query
# fetch <- EUtilsGet(res)
##get the titile of fetch
# #Cited(fetch)     ##not precise
# #Country(fetch)  ##not precise
# #AbstractText(fetch) ##for text mining, not to use
#
# ArticleTitle(fetch)
# PMID(fetch)
# Title(fetch)    ##the journal
# YearPubmed(fetch)
# Author(fetch)   ##data frame
# PublicationType(fetch)
# Affiliation(fetch)
qitems = c("circadian[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"circadian[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"sleep[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"sleep[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"melanoma[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"melanoma[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"(cancer[Title] OR tumor[Title]) AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"(cancer[Title/Abstract] OR tumor[Title/Abstract]) AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"circadian[Title]", "circadian[Title/Abstract]", "sleep[Title]", "melanoma[Title]",
"cancer[Title] OR tumor[Title])", "autism[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])")
qnames = c("circadian[Title]&CNS","circadian[Title_Abstract]&CNS",
"sleep[Title]&CNS", "sleep[Title_Abstract]&CNS",
"melanoma[Title]&CNS", "melanoma[Title_Abstract]&CNS",
"cancer|tumor[Title]&CNS", "cancer|tumor[Title_Abstract]&CNS",
"circadian[Title]", "circadian[Title_Abstract]", "sleep[Title]",
"melanoma[Title]", "cancer|tumor[Title]", "autism[Title_Abstract]&CNS")
cindex = 10
qitems = qitems[cindex]
qnames = qnames[cindex]
mindatev = "2009/01/01"
maxdatev = "2010/01/31"
##just cell, nature and science
#qitems = c("Nature[Journal]", "Science[Journal]", "Cell[Journal]")
outL = qitems  %>% purrr::map(function(z) {
qitem = z
res <- EUtilsSummary(qitem, mindate = "2009/01/01", maxdate = "2010/01/31", retmax = 99999)
##get Medline object of EUtils query
fetch <- EUtilsGet(res)
pubD = cbind(PMID(fetch), Title(fetch), YearPubmed(fetch), ArticleTitle(fetch), Cited(fetch),
unlist(lapply(Author(fetch), function(z) { return(paste(as.character(z[nrow(z),1:2]), collapse = ",")) })),
unlist(lapply(PublicationType(fetch), function(z) { return(as.character(z[1])) })),
unlist(lapply(Affiliation(fetch), function(z) { return(paste(unique(z), collapse = "|")) })) )
colnames(pubD) = c("pid", "journal", "year", "title", "citation", "lastAu", "journalTy", "institute")
apubD = as.data.frame(pubD) %>% dplyr::filter(journalTy == "Journal Article" | journalTy == "Letter") %>%
dplyr::filter(!grepl("Calcium and SOL Protease Mediate Temperature Resetting of Circadian Clocks", title)) %>%
dplyr::filter(!grepl("Retraction|Correction", title))
#authorD = do.call(rbind, Author(fetch)) %>% dplyr::mutate(uniName = paste(LastName, ForeName, sep = ",") )
return(apubD)
})
oriL = outL
rm(list=ls())
library(RISmed)
library(tidyverse)
##scholar: Analyse Citation Data from Google Scholar
##rvest: Easily Harvest (Scrape) Web Pages
##Get summary of NCBI EUtils query
#qitem = "circadian[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])"
#qitem = "circadian[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])"
# res <- EUtilsSummary(qitem, mindate = "2009/01/01", maxdate = "2019/06/01", retmax = 99999)
# ##get Medline object of EUtils query
# fetch <- EUtilsGet(res)
##get the titile of fetch
# #Cited(fetch)     ##not precise
# #Country(fetch)  ##not precise
# #AbstractText(fetch) ##for text mining, not to use
#
# ArticleTitle(fetch)
# PMID(fetch)
# Title(fetch)    ##the journal
# YearPubmed(fetch)
# Author(fetch)   ##data frame
# PublicationType(fetch)
# Affiliation(fetch)
qitems = c("circadian[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"circadian[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"sleep[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"sleep[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"melanoma[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"melanoma[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"(cancer[Title] OR tumor[Title]) AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"(cancer[Title/Abstract] OR tumor[Title/Abstract]) AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"circadian[Title]", "circadian[Title/Abstract]", "sleep[Title]", "melanoma[Title]",
"cancer[Title] OR tumor[Title])", "autism[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])")
qnames = c("circadian[Title]&CNS","circadian[Title_Abstract]&CNS",
"sleep[Title]&CNS", "sleep[Title_Abstract]&CNS",
"melanoma[Title]&CNS", "melanoma[Title_Abstract]&CNS",
"cancer|tumor[Title]&CNS", "cancer|tumor[Title_Abstract]&CNS",
"circadian[Title]", "circadian[Title_Abstract]", "sleep[Title]",
"melanoma[Title]", "cancer|tumor[Title]", "autism[Title_Abstract]&CNS")
cindex = 10
qitems = qitems[cindex]
qnames = qnames[cindex]
mindatev = "2009/01/01"
maxdatev = "2009/02/01"
##just cell, nature and science
#qitems = c("Nature[Journal]", "Science[Journal]", "Cell[Journal]")
outL = qitems  %>% purrr::map(function(z) {
qitem = z
res <- EUtilsSummary(qitem, mindate = mindatev, maxdate = maxdatev, retmax = 99999)
##get Medline object of EUtils query
fetch <- EUtilsGet(res)
pubD = cbind(PMID(fetch), Title(fetch), YearPubmed(fetch), ArticleTitle(fetch), Cited(fetch),
unlist(lapply(Author(fetch), function(z) { return(paste(as.character(z[nrow(z),1:2]), collapse = ",")) })),
unlist(lapply(PublicationType(fetch), function(z) { return(as.character(z[1])) })),
unlist(lapply(Affiliation(fetch), function(z) { return(paste(unique(z), collapse = "|")) })) )
colnames(pubD) = c("pid", "journal", "year", "title", "citation", "lastAu", "journalTy", "institute")
apubD = as.data.frame(pubD) %>% dplyr::filter(journalTy == "Journal Article" | journalTy == "Letter") %>%
dplyr::filter(!grepl("Calcium and SOL Protease Mediate Temperature Resetting of Circadian Clocks", title)) %>%
dplyr::filter(!grepl("Retraction|Correction", title))
#authorD = do.call(rbind, Author(fetch)) %>% dplyr::mutate(uniName = paste(LastName, ForeName, sep = ",") )
return(apubD)
})
dim(outL[[1]])
rm(list=ls())
library(RISmed)
library(tidyverse)
##scholar: Analyse Citation Data from Google Scholar
##rvest: Easily Harvest (Scrape) Web Pages
##Get summary of NCBI EUtils query
#qitem = "circadian[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])"
#qitem = "circadian[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])"
# res <- EUtilsSummary(qitem, mindate = "2009/01/01", maxdate = "2019/06/01", retmax = 99999)
# ##get Medline object of EUtils query
# fetch <- EUtilsGet(res)
##get the titile of fetch
# #Cited(fetch)     ##not precise
# #Country(fetch)  ##not precise
# #AbstractText(fetch) ##for text mining, not to use
#
# ArticleTitle(fetch)
# PMID(fetch)
# Title(fetch)    ##the journal
# YearPubmed(fetch)
# Author(fetch)   ##data frame
# PublicationType(fetch)
# Affiliation(fetch)
qitems = c("circadian[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"circadian[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"sleep[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"sleep[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"melanoma[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"melanoma[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"(cancer[Title] OR tumor[Title]) AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"(cancer[Title/Abstract] OR tumor[Title/Abstract]) AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"circadian[Title]", "circadian[Title/Abstract]", "sleep[Title]", "melanoma[Title]",
"cancer[Title] OR tumor[Title])", "autism[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])")
qnames = c("circadian[Title]&CNS","circadian[Title_Abstract]&CNS",
"sleep[Title]&CNS", "sleep[Title_Abstract]&CNS",
"melanoma[Title]&CNS", "melanoma[Title_Abstract]&CNS",
"cancer|tumor[Title]&CNS", "cancer|tumor[Title_Abstract]&CNS",
"circadian[Title]", "circadian[Title_Abstract]", "sleep[Title]",
"melanoma[Title]", "cancer|tumor[Title]", "autism[Title_Abstract]&CNS")
cindex = 10
qitems = qitems[cindex]
qnames = qnames[cindex]
mindatev = "2009/01/01"
maxdatev = "2009/12/31"
##just cell, nature and science
#qitems = c("Nature[Journal]", "Science[Journal]", "Cell[Journal]")
outL = qitems  %>% purrr::map(function(z) {
qitem = z
res <- EUtilsSummary(qitem, mindate = mindatev, maxdate = maxdatev, retmax = 99999)
##get Medline object of EUtils query
fetch <- EUtilsGet(res)
pubD = cbind(PMID(fetch), Title(fetch), YearPubmed(fetch), ArticleTitle(fetch), Cited(fetch),
unlist(lapply(Author(fetch), function(z) { return(paste(as.character(z[nrow(z),1:2]), collapse = ",")) })),
unlist(lapply(PublicationType(fetch), function(z) { return(as.character(z[1])) })),
unlist(lapply(Affiliation(fetch), function(z) { return(paste(unique(z), collapse = "|")) })) )
colnames(pubD) = c("pid", "journal", "year", "title", "citation", "lastAu", "journalTy", "institute")
apubD = as.data.frame(pubD) %>% dplyr::filter(journalTy == "Journal Article" | journalTy == "Letter") %>%
dplyr::filter(!grepl("Calcium and SOL Protease Mediate Temperature Resetting of Circadian Clocks", title)) %>%
dplyr::filter(!grepl("Retraction|Correction", title))
#authorD = do.call(rbind, Author(fetch)) %>% dplyr::mutate(uniName = paste(LastName, ForeName, sep = ",") )
return(apubD)
})
oriL = outL
rm(list=ls())
library(RISmed)
library(tidyverse)
##scholar: Analyse Citation Data from Google Scholar
##rvest: Easily Harvest (Scrape) Web Pages
##Get summary of NCBI EUtils query
#qitem = "circadian[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])"
#qitem = "circadian[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])"
# res <- EUtilsSummary(qitem, mindate = "2009/01/01", maxdate = "2019/06/01", retmax = 99999)
# ##get Medline object of EUtils query
# fetch <- EUtilsGet(res)
##get the titile of fetch
# #Cited(fetch)     ##not precise
# #Country(fetch)  ##not precise
# #AbstractText(fetch) ##for text mining, not to use
#
# ArticleTitle(fetch)
# PMID(fetch)
# Title(fetch)    ##the journal
# YearPubmed(fetch)
# Author(fetch)   ##data frame
# PublicationType(fetch)
# Affiliation(fetch)
qitems = c("circadian[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"circadian[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"sleep[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"sleep[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"melanoma[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"melanoma[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"(cancer[Title] OR tumor[Title]) AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"(cancer[Title/Abstract] OR tumor[Title/Abstract]) AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"circadian[Title]", "circadian[Title/Abstract]", "sleep[Title]", "melanoma[Title]",
"cancer[Title] OR tumor[Title])", "autism[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])")
qnames = c("circadian[Title]&CNS","circadian[Title_Abstract]&CNS",
"sleep[Title]&CNS", "sleep[Title_Abstract]&CNS",
"melanoma[Title]&CNS", "melanoma[Title_Abstract]&CNS",
"cancer|tumor[Title]&CNS", "cancer|tumor[Title_Abstract]&CNS",
"circadian[Title]", "circadian[Title_Abstract]", "sleep[Title]",
"melanoma[Title]", "cancer|tumor[Title]", "autism[Title_Abstract]&CNS")
cindex = 10
qitems = qitems[cindex]
qnames = qnames[cindex]
mindatev = "2009/01/01"
maxdatev = "2010/01/01"
##just cell, nature and science
#qitems = c("Nature[Journal]", "Science[Journal]", "Cell[Journal]")
outL = qitems  %>% purrr::map(function(z) {
qitem = z
res <- EUtilsSummary(qitem, mindate = mindatev, maxdate = maxdatev, retmax = 99999)
##get Medline object of EUtils query
fetch <- EUtilsGet(res)
pubD = cbind(PMID(fetch), Title(fetch), YearPubmed(fetch), ArticleTitle(fetch), Cited(fetch),
unlist(lapply(Author(fetch), function(z) { return(paste(as.character(z[nrow(z),1:2]), collapse = ",")) })),
unlist(lapply(PublicationType(fetch), function(z) { return(as.character(z[1])) })),
unlist(lapply(Affiliation(fetch), function(z) { return(paste(unique(z), collapse = "|")) })) )
colnames(pubD) = c("pid", "journal", "year", "title", "citation", "lastAu", "journalTy", "institute")
apubD = as.data.frame(pubD) %>% dplyr::filter(journalTy == "Journal Article" | journalTy == "Letter") %>%
dplyr::filter(!grepl("Calcium and SOL Protease Mediate Temperature Resetting of Circadian Clocks", title)) %>%
dplyr::filter(!grepl("Retraction|Correction", title))
#authorD = do.call(rbind, Author(fetch)) %>% dplyr::mutate(uniName = paste(LastName, ForeName, sep = ",") )
return(apubD)
})
oriL = outL
rm(list=ls())
library(RISmed)
library(tidyverse)
##scholar: Analyse Citation Data from Google Scholar
##rvest: Easily Harvest (Scrape) Web Pages
##Get summary of NCBI EUtils query
#qitem = "circadian[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])"
#qitem = "circadian[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])"
# res <- EUtilsSummary(qitem, mindate = "2009/01/01", maxdate = "2019/06/01", retmax = 99999)
# ##get Medline object of EUtils query
# fetch <- EUtilsGet(res)
##get the titile of fetch
# #Cited(fetch)     ##not precise
# #Country(fetch)  ##not precise
# #AbstractText(fetch) ##for text mining, not to use
#
# ArticleTitle(fetch)
# PMID(fetch)
# Title(fetch)    ##the journal
# YearPubmed(fetch)
# Author(fetch)   ##data frame
# PublicationType(fetch)
# Affiliation(fetch)
qitems = c("circadian[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"circadian[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"sleep[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"sleep[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"melanoma[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"melanoma[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"(cancer[Title] OR tumor[Title]) AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"(cancer[Title/Abstract] OR tumor[Title/Abstract]) AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"circadian[Title]", "circadian[Title/Abstract]", "sleep[Title]", "melanoma[Title]",
"cancer[Title] OR tumor[Title])", "autism[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])")
qnames = c("circadian[Title]&CNS","circadian[Title_Abstract]&CNS",
"sleep[Title]&CNS", "sleep[Title_Abstract]&CNS",
"melanoma[Title]&CNS", "melanoma[Title_Abstract]&CNS",
"cancer|tumor[Title]&CNS", "cancer|tumor[Title_Abstract]&CNS",
"circadian[Title]", "circadian[Title_Abstract]", "sleep[Title]",
"melanoma[Title]", "cancer|tumor[Title]", "autism[Title_Abstract]&CNS")
cindex = 10
qitems = qitems[cindex]
qnames = qnames[cindex]
mindatev = "2009/01/01"
maxdatev = "2010/01/01"
##just cell, nature and science
#qitems = c("Nature[Journal]", "Science[Journal]", "Cell[Journal]")
outL = qitems  %>% purrr::map(function(z) {
qitem = z
res <- EUtilsSummary(qitem, mindate = "2009/01/01", maxdate = "2010/01/01", retmax = 99999)
##get Medline object of EUtils query
fetch <- EUtilsGet(res)
pubD = cbind(PMID(fetch), Title(fetch), YearPubmed(fetch), ArticleTitle(fetch), Cited(fetch),
unlist(lapply(Author(fetch), function(z) { return(paste(as.character(z[nrow(z),1:2]), collapse = ",")) })),
unlist(lapply(PublicationType(fetch), function(z) { return(as.character(z[1])) })),
unlist(lapply(Affiliation(fetch), function(z) { return(paste(unique(z), collapse = "|")) })) )
colnames(pubD) = c("pid", "journal", "year", "title", "citation", "lastAu", "journalTy", "institute")
apubD = as.data.frame(pubD) %>% dplyr::filter(journalTy == "Journal Article" | journalTy == "Letter") %>%
dplyr::filter(!grepl("Calcium and SOL Protease Mediate Temperature Resetting of Circadian Clocks", title)) %>%
dplyr::filter(!grepl("Retraction|Correction", title))
#authorD = do.call(rbind, Author(fetch)) %>% dplyr::mutate(uniName = paste(LastName, ForeName, sep = ",") )
return(apubD)
})
oriL = outL
rm(list=ls())
library(RISmed)
library(tidyverse)
##scholar: Analyse Citation Data from Google Scholar
##rvest: Easily Harvest (Scrape) Web Pages
##Get summary of NCBI EUtils query
#qitem = "circadian[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])"
#qitem = "circadian[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])"
# res <- EUtilsSummary(qitem, mindate = "2009/01/01", maxdate = "2019/06/01", retmax = 99999)
# ##get Medline object of EUtils query
# fetch <- EUtilsGet(res)
##get the titile of fetch
# #Cited(fetch)     ##not precise
# #Country(fetch)  ##not precise
# #AbstractText(fetch) ##for text mining, not to use
#
# ArticleTitle(fetch)
# PMID(fetch)
# Title(fetch)    ##the journal
# YearPubmed(fetch)
# Author(fetch)   ##data frame
# PublicationType(fetch)
# Affiliation(fetch)
qitems = c("circadian[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"circadian[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"sleep[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"sleep[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"melanoma[Title] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"melanoma[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"(cancer[Title] OR tumor[Title]) AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"(cancer[Title/Abstract] OR tumor[Title/Abstract]) AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])",
"circadian[Title]", "circadian[Title/Abstract]", "sleep[Title]", "melanoma[Title]",
"cancer[Title] OR tumor[Title])", "autism[Title/Abstract] AND (Nature[Journal] OR Science[Journal] OR Cell[Journal])")
qnames = c("circadian[Title]&CNS","circadian[Title_Abstract]&CNS",
"sleep[Title]&CNS", "sleep[Title_Abstract]&CNS",
"melanoma[Title]&CNS", "melanoma[Title_Abstract]&CNS",
"cancer|tumor[Title]&CNS", "cancer|tumor[Title_Abstract]&CNS",
"circadian[Title]", "circadian[Title_Abstract]", "sleep[Title]",
"melanoma[Title]", "cancer|tumor[Title]", "autism[Title_Abstract]&CNS")
cindex = 10
qitems = qitems[cindex]
qnames = qnames[cindex]
mindatev = "2009/01/01"
maxdatev = "2009/05/31"
##just cell, nature and science
#qitems = c("Nature[Journal]", "Science[Journal]", "Cell[Journal]")
outL = qitems  %>% purrr::map(function(z) {
qitem = z
res <- EUtilsSummary(qitem, mindate = mindatev, maxdate = maxdatev, retmax = 99999)
##get Medline object of EUtils query
fetch <- EUtilsGet(res)
pubD = cbind(PMID(fetch), Title(fetch), YearPubmed(fetch), ArticleTitle(fetch), Cited(fetch),
unlist(lapply(Author(fetch), function(z) { return(paste(as.character(z[nrow(z),1:2]), collapse = ",")) })),
unlist(lapply(PublicationType(fetch), function(z) { return(as.character(z[1])) })),
unlist(lapply(Affiliation(fetch), function(z) { return(paste(unique(z), collapse = "|")) })) )
colnames(pubD) = c("pid", "journal", "year", "title", "citation", "lastAu", "journalTy", "institute")
apubD = as.data.frame(pubD) %>% dplyr::filter(journalTy == "Journal Article" | journalTy == "Letter") %>%
dplyr::filter(!grepl("Calcium and SOL Protease Mediate Temperature Resetting of Circadian Clocks", title)) %>%
dplyr::filter(!grepl("Retraction|Correction", title))
#authorD = do.call(rbind, Author(fetch)) %>% dplyr::mutate(uniName = paste(LastName, ForeName, sep = ",") )
return(apubD)
})
oriL = outL
378*0.28
install.packages("ape")
install.packages("dplyr", type = "source")
install.packages("plyr", type = "source")
install.packages("ggplot2", type = "source")
install.packages("plotly", type = "binary")
install.packages("tidyr", type = "source")
install.packages("tibble", type = "source")
install.packages("ggrepel", type = "source")
install.packages("reshape2", type = "source")
install.packages("stringr", type = "source")
install.packages("readr", type = "source")
install.packages("CircStats", type = "source")
install.packages("ggdendro", type = "source")
install.packages("ggcorrplot", type = "source")
install.packages("fuzzyjoin", type = "source")
install.packages("shiny")
install.packages("devtools")
install.packages("rsconnect")
devtools::install_github('gangwug/impute')
cat(readLines("~/.R/Makevars"), sep = '\n')
library(impute)
remove.packages("MetaCycle")
library(MetaCyle)
install.packages("~/Downloads/MetaCycle_1.1.0.tar.gz", type = "source")
?install.packages
install.packages("~/Downloads/MetaCycle_1.2.0.tar.gz", type = "source")
library(dplyr)
?contains
?matches
vars_select(nms, matches(".t."))
install.packages("ape")
library(ape)
sessionInfo()
set.seed(10)
sample(1:100, 10)
set.seed(100)
sample(1:100,10)
setwd("~/Downloads/intersetApp/")
?split
library(shiny)
getwd()
?runApp
runApp("~/Downloads/intersetApp")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
